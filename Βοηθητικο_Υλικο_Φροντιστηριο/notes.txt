frontistirio paskali
11/01/2022

meros 1 - 47:25 leei step-by-step kapoia pragmata

make tarball -> ftiaxnei .tar.gz


page fault -> 15
12 Instruction page fault
13 Load page fault

sigoura gia CopyOnWrite (COW) tha xreiastoume to
15 Store/AMO page fault

kalwntas tn "r_scause" i opoia tha exei tn timi 15
na paroume tn selida p einai read-only, na tn antigrapsoume se mia nea selida
i nea auti selida tha einai read-write kanonika. I ifistameni selida read-only
dn mporoume na tn diagrapsoume gt mporei na einai diamoirazomeni akoma me ton
gonea i me alles diergasies opote prokeimenou na exoume mia eikona tou ti akrivws
tha kanoume, orizoume episis mia megaliteri domi tn opoia mporoume na tn onomasoume
ws reference_count, dld ena metriti anaforwn gia kathe mia selida tis fisikis mnimis
opos to vlepei to litourgiko sistima, kathe mia selida tis fisikis mnimis tha exei mia
timi sxetika me to poses diergasies tin prospelaunoun. Ksekinoun oles me 0, me to pou
ginetai mia anathesi me tn kalloc, i timi tou reference_count gia tn sigkekrimeni fisiki
selida ginetai monada. Me to pou ginetai to COW, den antigrafetai i selida, antitheta
auksanetai to reference_count kata 1.

exoume ena megisto mnimis 128MB to opoio orizetai apo to PHYSTOP
episis kseroume tin timi tou megethous tis selidas (PGSIZE)
opote mporoume na orisoume enan pinaka megethous PHYSTOP/PGSIZE
gia kathe selida, ena noumero, ena int
(den xreiazetai stroggilopoiisi afou pernoume tin akeraia diairesi)
to piliko tis fisikis dieuthinsis pros PGSIZE einai auto pou exeis
me auto tn tropo exeis akrivws ton metriti gia tn sigkekrimeni selida pou thes

ta meri pou theloun tropopoiiseis:


"proc.c"

uparxei i fork(void) -> grammi 272
(284 - 289)
i uvmcopy kaleite me tn palio pagetable kai tn kainourgio pagetable
ara prepei na tropopoiisoume tn "uvmcopy" i opoia einai sto "vm.c"


"vm.c"

uvmcopy ti kanei (300):
gia oles tis selides pou einai se auti tn istoria kanei to eksis:
vriskei to page table entry (pte), elegxei oti einai valid
auto pou leei sto telos einai to eksis (grammi 315):
ginetai alloc mia kainourgia selida (i kalloc() epistrefei enan pointer se mia
kainourgia selida pou exei anatethei molis) kai antigrafeis tn iparxousa selida sou
stin kainourgia (pa einai i iparxousa kai mem i kainourgia) (317)
ara auto pou tha kaneis einai na sviseis tis grammes 315, 316, 317 kai na dimiourgiseis
to kainourgio sou pragma, dld sto map pou tha kaneis dn tha orizeis ws fisiki selida
sou tin "mem" alla tn iparxousa, dld to "pa" (prepei na tn oriseis kai read-only)
gia na dilwsoume oti einai read-only prepei katw apo tn grammi 314 na poume:
// Mark the child page table entry read-only
flags &= ~PTE_W; (bitwise and)

etsi kanoume reset to flag, to flag sto pa einai read-only. Me ton tropo auto exoume
valei tin selida pou antistoixei sto pagetable tou paidiou na einai read-only. Den exoume
valei omws tin selida pou antistoixei sto pagetable tou goniou na einai kai auti read-only.
Gia na tn valoume kai auti prepei katw apo tn grammi 321 na poume:
// Mark the parent page table entry read-only
*pte &= ~PTE_W;

edw se auto to simeio (katw apo to *pte &= ...) prepei na auksisoume to reference_count gia
tin sigkekrimeni selida (pa) kata ena.

to "mem" prepei na ginei "pa"
if(mappages(new, i, PGSIZE, (uint64)pa, flags) != 0){

episis ta
char *mem; (306)
kfree(mem); (319)

den xreiazontai


"trap.c"

usertrap (36):
na prosthesoume ena elseif gia r_scause() stn grammi 68:
// cow fault handler
else if(r_scause() == 15){}

sto swma autou tou else if exoume tn epilogi eite na to kanoume ksexwristi sinartisi i na to
valoume ekei mesa. Auto p theloume na kanoume einai na anagnwrisoume oti einai valid cow
fault, dld oti prokeite gia mia selida i opoia einai used kai valid, einai read-only kai oti
tha prepei stn sinexeia na dimiourgisoume mia kainourgia selida (na kalesoume dld tn kalloc()),
na antigrapsoume ta periexomena tis ifistamenis selidas stn kainourgia selida kai otan tha
teleiwsei auti i diadikasia tote na meiwsoume to reference_count kata ena.

gia na skotwsoume tn diergasia kanoume
p->killed = 1;


"vm.c"

"copyout" :
grammi 353 auto p kanei einai na pigenei na pairnei apeutheias to physical address apo ena
virtual address xwris na perasei apo to MMU tou hardware to opoio simainei oti dn exei proklithei
page fault, paei xima kai vriskei to pa apo to va kai to xrisimopoiei meta. I sinartisi walkaddr
kanei tn douleia p kanei i MMU, dld xrisimopoiei ta page tables kai ta kanei se software auto p kanei
to MMU se hardware. Ara to MMU se hardware ama pigenes na grapseis apeutheias sto virtual address auto
tha sou petage page fault. Edw dn to kaneis auto, edw pairneis apeutheias to physical address kai
afou to pareis mporeis na to kaneis oti thes.

Ara auto pou xreiazetai na kaneis einai na tropopoiiseis kai tn copyout outos wste na pareis to
pte tou physical address, na deis an to pte einai CoW (einai dld User, Valid, klp alla read-only) an
einai CoW na kaneis oli auti tn douleia p kaneis kai sto "uvmcopy", dld na antigrapseis tn selida,
na auksiseis tn reference_count, na diagrapseis tn palia read-only, na kaleseis tn kfree stn
proigoumeni read-only selida kai stn sinexeia na sinexiseis tn douleia p ekanes. Anti dld na pareis
to pa0 me auto tn tropo (to pa0 katarxas mporei na einai read-only) epd dn thes na exeis kati tetoio,
na einai read-only to pa0, vlepeis an to pa0 einai read-only logw CoW, an einai read-only logw CoW,
dimiourgeis ena kainourgio pa0 kai xrisimopoieis auto.


"kalloc.c"

kalloc (69):
na elegxoume oti einai ontws 0 o reference_count kai na to thetoume me 1

H DIADIKASIA ME TO FREE TIS SELIDAS

i apodesmeusi tis selidas exei dio ekdoxes
1) i klassiki, reference_count == 1, mono mia diergasia tn xrisimopoiei kai twra dn tn
xreiazetai ara tn apodesmeuei apo to leitourgiko sistima, dn tn xreiazetai kapoia alli
diergasia, ara pernaei sti lista me tis diathesimes selides
2) an to reference_count einai megalitero tou 1, tote dn prepei na apodesmeusei tn selida,
prepei apla na meiwsei to reference_count kata ena, tipota allo

PERAN OLWN AUTWN PREPEI NA ELEGXOUME KATHE FORA KAI TI MPOREI NA PAEI STRABA, OPWS PX:
1) TO REFERENCE_COUNT NA EINAI 0 KAI NA LEME NA TO MEIWSOUME KATA 1
2) TO VIRTUAL ADDRESS TO OPOIO MAS DINETAI NA EINAI MEGALITERO APO TO MAX_VA, TO OPOIO ORIZETAI
STO XV6
KAI ANALOGA NA EPISTREFOUME TIMES ARNITIKES (P.X. -1)

YPARXEI I PERIPTWSI NA ZITISEI PARAPANW SELIDES MESW TIS KANONIKIS DIADIKASIAS MIA DIERGASIA
KAI APLA NA MIN EXEI ALLES TO SISTIMA. SE AUTI TIN PERIPTWSI APLA NA EPISTREFEI OTI DN EXEI
ALLES TETOIES SELIDES KAI APLA NA TERMATISEI TN DIERGASIA.

I diadikasia apeleutherwseis tn selidwn einai ligo tricky me tn ennoia oti to free exei para
polles anafores mesa. Edw exoume 2 epiloges:
1) na tropopoiisoume tn free oste na kserei oti iparxei i COW, dld na meiwnei tn reference_count
kai an einai 0 telika na apodesmeuei kai tn mnimi
2) na afisoume tn free ws exei kai na ilopoiisoume mia diaforetiki sinartisi i opoia prwta na
elegxei to reference_count, na to meiwnei, kai an xreiastei (reference_count == 0), tote na kalei
tn free me tn ifistameni ilopoiisi

(se ligoteres apo 100 grammes mporei na ilopoiithei olo auto, mazi me tous elegxous klp)

to reference_count array prepei na einai global, na oristei sto "kalloc.c" (grammi 25)
kalitera na exei diko tou lock alla kai to kmem isws einai ok (?)
prepei me kapoion tropo na prostateueis tn prosvasi sto critical region kai auto tha ginei
me kapoio lock (kai me counter ginetai, eite me diaforetiko lock).

struct {
  struct spinlock lock;
  int reference_count[PHYSTOP/PGSIZE];
} blabla;


PTE2PA:
pairnei ena pte kai stin metatrepei se physical address

virtual address:
r_stval();